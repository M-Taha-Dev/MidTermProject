/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package midtermproject;

import java.util.*;
import java.awt.Color;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class EmployeeFrame extends javax.swing.JFrame {

    /**
     * Creates new form Employee
     */
    String searchModel;
    String selectedType;
    String selectedModel;
    List<NonConsumableAccessories> nList1 = new ArrayList<>();
    List<ConsumableAccessories> cList1 = new ArrayList<>();
    NonConsumableAccessories ncObj = new NonConsumableAccessories();
    ConsumableAccessories cObj = new ConsumableAccessories();
    String email = "taha@gmail.com";
    
    public EmployeeFrame() {
        initComponents();
        selectedPanel.setVisible(false);
        outPanel.setVisible(false);
         String reqID = "";
        /*if(Manager.getInstance().recList.size() >0)
        {
        reqID = Manager.getInstance().recList.get(0).getReqID();
        }
        Receipt rec  =(Receipt) Manager.getInstance().searchReqID(reqID);
        Employee emp =  Admin.getInstance().viewEmployee(email);
        showEmployeeRec( emp, rec);*/
    }
    /*public EmployeeFrame(String email)
    {
         initComponents();
        selectedPanel.setVisible(false);
        outPanel.setVisible(false);
        this.email = email;
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        adminButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        adminButton1 = new javax.swing.JButton();
        adminButton2 = new javax.swing.JButton();
        adminButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        itemComboBox = new javax.swing.JComboBox<>();
        consumableRadio = new javax.swing.JRadioButton();
        nonConsumableRadio = new javax.swing.JRadioButton();
        selectedPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        selectedTable = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        outPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        outTable = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        receiptTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 0, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        adminButton.setBackground(new java.awt.Color(255, 0, 51));
        adminButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        adminButton.setForeground(new java.awt.Color(255, 255, 255));
        adminButton.setText("Request");
        adminButton.setBorder(null);
        adminButton.setFocusable(false);
        adminButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                adminButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                adminButtonMouseExited(evt);
            }
        });
        adminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminButtonActionPerformed(evt);
            }
        });
        jPanel1.add(adminButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 430, 341, 90));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dashboard");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 46, 194, 96));

        adminButton1.setBackground(new java.awt.Color(255, 0, 51));
        adminButton1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        adminButton1.setForeground(new java.awt.Color(255, 255, 255));
        adminButton1.setText("Accessories");
        adminButton1.setBorder(null);
        adminButton1.setFocusable(false);
        adminButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminButton1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                adminButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                adminButton1MouseExited(evt);
            }
        });
        adminButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(adminButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 341, 90));

        adminButton2.setBackground(new java.awt.Color(255, 0, 51));
        adminButton2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        adminButton2.setForeground(new java.awt.Color(255, 255, 255));
        adminButton2.setText("Receipt");
        adminButton2.setBorder(null);
        adminButton2.setFocusable(false);
        adminButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminButton2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                adminButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                adminButton2MouseExited(evt);
            }
        });
        adminButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(adminButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 341, 90));

        adminButton3.setBackground(new java.awt.Color(255, 0, 51));
        adminButton3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        adminButton3.setForeground(new java.awt.Color(255, 255, 255));
        adminButton3.setText("Logout");
        adminButton3.setBorder(null);
        adminButton3.setFocusable(false);
        adminButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminButton3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                adminButton3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                adminButton3MouseExited(evt);
            }
        });
        adminButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(adminButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 550, 341, 90));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 0, 340, 800));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Selected Items");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, -1, -1));

        itemComboBox.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        itemComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemComboBoxActionPerformed(evt);
            }
        });
        jPanel2.add(itemComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 148, 200, -1));

        consumableRadio.setBackground(new java.awt.Color(255, 255, 255));
        consumableRadio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        consumableRadio.setText("Consumable Item");
        consumableRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consumableRadioActionPerformed(evt);
            }
        });
        jPanel2.add(consumableRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, -1, -1));

        nonConsumableRadio.setBackground(new java.awt.Color(255, 255, 255));
        nonConsumableRadio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nonConsumableRadio.setText("Non Consumable Item");
        nonConsumableRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonConsumableRadioActionPerformed(evt);
            }
        });
        jPanel2.add(nonConsumableRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 100, -1, -1));

        selectedPanel.setBackground(new java.awt.Color(255, 255, 255));

        selectedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        selectedTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectedTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(selectedTable);

        jButton4.setBackground(new java.awt.Color(51, 102, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("View");
        jButton4.setFocusable(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(51, 102, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Remove");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(51, 102, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Remove All");
        jButton5.setFocusable(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout selectedPanelLayout = new javax.swing.GroupLayout(selectedPanel);
        selectedPanel.setLayout(selectedPanelLayout);
        selectedPanelLayout.setHorizontalGroup(
            selectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, selectedPanelLayout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jButton5)))
                .addGap(37, 37, 37))
        );
        selectedPanelLayout.setVerticalGroup(
            selectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(selectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.add(selectedPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 480, 400));

        outPanel.setBackground(new java.awt.Color(255, 255, 255));

        outTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        outTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(outTable);

        javax.swing.GroupLayout outPanelLayout = new javax.swing.GroupLayout(outPanel);
        outPanel.setLayout(outPanelLayout);
        outPanelLayout.setHorizontalGroup(
            outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        outPanelLayout.setVerticalGroup(
            outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(outPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 240, 500, 300));

        jButton9.setBackground(new java.awt.Color(153, 255, 153));
        jButton9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Request");
        jButton9.setFocusable(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 660, -1, 50));

        jTabbedPane1.addTab("tab1", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        receiptTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(receiptTable);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Receipts");

        jButton6.setBackground(new java.awt.Color(51, 102, 255));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("View");
        jButton6.setFocusable(false);

        jButton7.setBackground(new java.awt.Color(51, 102, 255));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Remove");
        jButton7.setFocusable(false);

        jButton8.setBackground(new java.awt.Color(51, 102, 255));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Remove All");
        jButton8.setFocusable(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(402, 402, 402)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton7)
                                .addGap(18, 18, 18)
                                .addComponent(jButton8))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(308, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel3)
                .addGap(32, 32, 32)
                .addComponent(jLabel4)
                .addGap(79, 79, 79)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(154, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab2", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1045, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 770, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab3", jPanel4);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 0, 1050, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void adminButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminButtonMouseClicked
        jTabbedPane1.setSelectedIndex(2);
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButtonMouseClicked

    private void adminButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminButtonMouseEntered

        adminButton.setBackground(Color.white);
        adminButton.setForeground(new Color(0, 0, 0));
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButtonMouseEntered

    private void adminButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminButtonMouseExited
        adminButton.setBackground(new Color(255, 0, 51));
        adminButton.setForeground(new Color(255, 255, 255));
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButtonMouseExited

    private void adminButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminButton1MouseClicked
        jTabbedPane1.setSelectedIndex(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButton1MouseClicked

    private void adminButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminButton1MouseEntered

        adminButton1.setBackground(Color.white);
        adminButton1.setForeground(new Color(0, 0, 0));
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButton1MouseEntered

    private void adminButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminButton1MouseExited
        adminButton1.setBackground(new Color(255, 0, 51));
        adminButton1.setForeground(new Color(255, 255, 255));
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButton1MouseExited

    private void adminButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminButton2MouseClicked
        jTabbedPane1.setSelectedIndex(1);
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButton2MouseClicked

    private void adminButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminButton2MouseEntered
        adminButton2.setBackground(Color.white);
        adminButton2.setForeground(new Color(0, 0, 0));
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButton2MouseEntered

    private void adminButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminButton2MouseExited
        adminButton2.setBackground(new Color(255, 0, 51));
        adminButton2.setForeground(new Color(255, 255, 255));
// TODO add your handling code here:
    }//GEN-LAST:event_adminButton2MouseExited

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        cList1 = new ArrayList<>();
        nList1 = new ArrayList<>();
        createSelectedTable(nList1, cList1);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void adminButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminButton3MouseClicked


    }//GEN-LAST:event_adminButton3MouseClicked

    private void adminButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminButton3MouseEntered

        adminButton3.setBackground(Color.white);
        adminButton3.setForeground(new Color(0, 0, 0));
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButton3MouseEntered

    private void adminButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminButton3MouseExited
        adminButton3.setBackground(new Color(255, 0, 51));
        adminButton3.setForeground(new Color(255, 255, 255));
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButton3MouseExited

    private void adminButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminButton2ActionPerformed
        jTabbedPane1.setSelectedIndex(1);
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButton2ActionPerformed

    private void adminButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminButton3ActionPerformed
        Login form = new Login();
        this.setVisible(false);
        form.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButton3ActionPerformed

    private void adminButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminButton1ActionPerformed
        jTabbedPane1.setSelectedIndex(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButton1ActionPerformed

    private void adminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminButtonActionPerformed
        jTabbedPane1.setSelectedIndex(2);
        // TODO add your handling code here:
    }//GEN-LAST:event_adminButtonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (selectedType.equals("Non Consumable")) {
            for (int i = 0; i < nList1.size(); i++) {
                if (nList1.get(i).getModel().equals(selectedModel)) {
                    ncObj = nList1.get(i);
                    break;
                }
            }
        } else if (selectedType.equals("Consumable")) {
            for (int i = 0; i < nList1.size(); i++) {
                if (cList1.get(i).getTag().equals(selectedModel)) {
                    cObj = cList1.get(i);
                    break;
                }
            }
        }

        String out = "";
        if (ncObj != null) {
            out = String.format("Item: " + ncObj.getType() + "  " + "Type: " + "Non Consumable" + "\n" + "Company Name: " + ncObj.getCompanyName() + "\n" + "Model No.: " + ncObj.getModel() + "\n" + "Year of Manufacture:  " + ncObj.getYearOfManufacture());
        } else if (cObj != null) {
            out = String.format("Item: " + cObj.getType() + "  " + "Type: " + "Non Consumable" + "\n" + "Company Name: " + cObj.getCompanyName() + "\n" + "Model No.: " + cObj.getTag() + "\n");
        }
        JOptionPane.showMessageDialog(null, out);
        //cObj = null;
        //ncObj = null;
    }//GEN-LAST:event_jButton4ActionPerformed

    private void consumableRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consumableRadioActionPerformed
        // TODO add your handling code here:
        nonConsumableRadio.setSelected(false);
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        //  itemComboBox = new JComboBox();
        model.addElement("None");
        model.addElement("File");
        model.addElement("Paper");
        model.addElement("Pencil");
        model.addElement("Note Book");
        model.addElement("Paper Clips");
        itemComboBox.setModel(model);
        // String[] array = {"File","Paper","Pencil","NoteBook","Paper Clips"};
    }//GEN-LAST:event_consumableRadioActionPerformed

    private void nonConsumableRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonConsumableRadioActionPerformed
        // TODO add your handling code here:
        consumableRadio.setSelected(false);
        //modelLabel.setVisible(false);
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        //  itemComboBox = new JComboBox();
        model.addElement("None");
        model.addElement("Laptop");
        model.addElement("Projector");
        model.addElement("Chair");
        model.addElement("Mobile");
        model.addElement("Computer");
        itemComboBox.setModel(model);
        // String[] array = {"File","Paper","Pencil","NoteBook","Paper Clips"};
    }//GEN-LAST:event_nonConsumableRadioActionPerformed

    private void itemComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemComboBoxActionPerformed
        // TODO add your handling code here:
        outPanel.setVisible(true);
        if (!itemComboBox.getSelectedItem().equals("None")) {
            String category = (String) itemComboBox.getSelectedItem();
            //JOptionPane.showMessageDialog(null,category);
            if (consumableRadio.isSelected()) {
                List<ConsumableAccessories> strList = Manager.getInstance().viewByCategoryC(category);
                createManagerTableC(strList);
            } else if (nonConsumableRadio.isSelected()) {
                List<NonConsumableAccessories> strList = Manager.getInstance().viewByCategoryN(category);
                createManagerTableN(strList);
            }
        }
    }//GEN-LAST:event_itemComboBoxActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        if (nList1.size() > 0 && cList1.size() > 0) {
            Request obj = new Request();
            obj.setcList(cList1);
            obj.setnList(nList1);
            obj.generateID();
            obj.setEmail(email);
            obj.setTimeq();
            Manager.getInstance().fetchRequests(obj);
        } else if (nList1.size() > 0) {
            Request obj = new Request();
            obj.setnList(nList1);
            obj.generateID();
            obj.setEmail(email);
            obj.setTimeq();
            Manager.getInstance().fetchRequests(obj);
        } else if (cList1.size() > 0) {
            Request obj = new Request();
            obj.setcList(cList1);
            obj.generateID();
            obj.setEmail(email);
            obj.setTimeq();
            Manager.getInstance().fetchRequests(obj);
        } else {
            JOptionPane.showMessageDialog(null, "Please Select an Item before sending request");
        }

    }//GEN-LAST:event_jButton9ActionPerformed

    private void outTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outTableMouseClicked
        // TODO add your handling code here:
        selectedPanel.setVisible(true);
        // TODO add your handling code here:
        ListSelectionModel m = outTable.getSelectionModel();
        DefaultTableModel model = (DefaultTableModel) outTable.getModel();
        int rowIndex = m.getMinSelectionIndex();
        String input = (String) model.getValueAt(rowIndex, 1);
        //ncObj = Manager.getInstance().getDataN(input);
        searchModel = input;
        if (consumableRadio.isSelected()) {
            cList1.add(Manager.getInstance().getDataC(input));
        } else if (nonConsumableRadio.isSelected()) {
            nList1.add(Manager.getInstance().getDataN(input));
        }
        createSelectedTable(nList1, cList1);
    }//GEN-LAST:event_outTableMouseClicked

    private void selectedTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectedTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) selectedTable.getModel();
        ListSelectionModel m = selectedTable.getSelectionModel();
        int rowIndex = m.getMinSelectionIndex();
        selectedModel = (String) model.getValueAt(rowIndex, 1);
        selectedType = (String) model.getValueAt(rowIndex, 3);

    }//GEN-LAST:event_selectedTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (selectedType.equals("Non Consumable")) {
            for (int i = 0; i < nList1.size(); i++) {
                if (nList1.get(i).getModel().equals(selectedModel)) {
                    nList1.remove(i);
                    break;
                }
            }

        } else if (selectedType.equals("Consumable")) {
            for (int i = 0; i < cList1.size(); i++) {
                if (cList1.get(i).getTag().equals(selectedModel)) {
                    cList1.remove(i);
                    break;
                }
            }
        }
        createSelectedTable(nList1, cList1);
    }//GEN-LAST:event_jButton1ActionPerformed

    String[][] ManagerTableDataN(List<NonConsumableAccessories> dataList) {
        int c = 3;
        int r = dataList.size();
        String[][] array = new String[r][c];
        String temp = "";
        for (int i = 0; i < dataList.size(); i++) {
            temp = temp + dataList.get(i).getCompanyName() + ",";
            temp = temp + dataList.get(i).getModel() + ",";
            temp = temp + dataList.get(i).getStatus();
            if (i < dataList.size() - 1) {
                temp = temp + ",";
            }
        }
        String arr[] = temp.split(",");
        int k = 0;
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (k < arr.length) {
                    array[i][j] = arr[k];
                    k++;
                }
            }
        }
        return array;
    }

    String[][] ManagerTableDataC(List<ConsumableAccessories> dataList) {
        int c = 3;
        int r = dataList.size();
        String[][] array = new String[r][c];
        String temp = "";
        for (int i = 0; i < dataList.size(); i++) {
            temp = temp + dataList.get(i).getCompanyName() + ",";
            temp = temp + dataList.get(i).getTag() + ",";
            temp = temp + dataList.get(i).getStatus();
            if (i < dataList.size() - 1) {
                temp = temp + ",";
            }
        }
        String arr[] = temp.split(",");
        int k = 0;
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (k < arr.length) {
                    array[i][j] = arr[k];
                    k++;
                }
            }
        }
        return array;
    }

    void createManagerTableN(List<NonConsumableAccessories> dataList) {
        String[][] rowData = ManagerTableDataN(dataList);
        String[] colHeader = {"Company Name", "Model", "Status"};
        DefaultTableModel model = (DefaultTableModel) outTable.getModel();
        model.setDataVector(rowData, colHeader);
    }

    void createManagerTableC(List<ConsumableAccessories> dataList) {
        String[][] rowData = ManagerTableDataC(dataList);
        String[] colHeader = {"Company Name", "Tag No.", "Status"};
        DefaultTableModel model = (DefaultTableModel) outTable.getModel();
        model.setDataVector(rowData, colHeader);
    }

    String[][] selectedTableData(List<NonConsumableAccessories> nList, List<ConsumableAccessories> cList) {
        int r = nList.size() + cList.size();
        int c = 4;
        String array[][] = new String[r][c];
        String temp = "";
        String input = "";
        for (int i = 0; i < nList.size(); i++) {
            temp = temp + nList.get(i).getCompanyName() + ",";
            temp = temp + nList.get(i).getModel() + ",";
            temp = temp + nList.get(i).getType() + ",";
            temp = temp + "Non Consumable";
            if (i < nList.size() - 1) {
                temp = temp + ",";
            }
        }
        for (int i = 0; i < cList.size(); i++) {
            input = input + cList.get(i).getCompanyName() + ",";
            input = input + cList.get(i).getTag() + ",";
            input = input + cList.get(i).getType() + ",";
            input = input + "Consumable";
            if (i < cList.size() - 1) {
                input = input + ",";
            }
        }
        String out = "";
        if (!temp.equals("") && (!input.equals(""))) {
            out = temp + "," + input;
        } else if (!temp.equals("")) {
            out = temp;
        } else if (!input.equals("")) {
            out = input;
        }
        String arr[] = out.split(",");
        int k = 0;

        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (k < arr.length) {
                    array[i][j] = arr[k];
                    k++;
                }
            }
        }
        return array;
    }

    void createSelectedTable(List<NonConsumableAccessories> nList, List<ConsumableAccessories> cList) {
        String[][] rowData = selectedTableData(nList, cList);
        String[] columnHeader = {"Company", "Tag", "Item", "Type"};
        DefaultTableModel model = (DefaultTableModel) selectedTable.getModel();
        model.setDataVector(rowData, columnHeader);
    }
    
    
     void showEmployeeRec(Employee emp, Receipt req) {
        
        String[][] rowData = createEmployeeRecTable(req.getnList(), req.getcList());
        String[] columnHeader = {"Company", "Tag", "Item", "Type"};
        DefaultTableModel model = (DefaultTableModel) receiptTable.getModel();
        model.setDataVector(rowData, columnHeader);
    }
    
    
    
    
     String[][] createEmployeeRecTable(List<NonConsumableAccessories> nList, List<ConsumableAccessories> cList) {
        int r = nList.size() + cList.size();
        int c = 4;
        String array[][] = new String[r][c];
        String temp = "";
        String input = "";
        for (int i = 0; i < nList.size(); i++) {
            temp = temp + nList.get(i).getCompanyName() + ",";
            temp = temp + nList.get(i).getModel() + ",";
            temp = temp + nList.get(i).getType() + ",";
            temp = temp + "Non Consumable";
            if (i < nList.size() - 1) {
                temp = temp + ",";
            }
        }
        for (int i = 0; i < cList.size(); i++) {
            input = input + cList.get(i).getCompanyName() + ",";
            input = input + cList.get(i).getTag() + ",";
            input = input + cList.get(i).getType() + ",";
            input = input + "Consumable";
            if (i < cList.size() - 1) {
                input = input + ",";
            }
        }
        String out = "";
        if (!temp.equals("") && (!input.equals(""))) {
            out = temp + "," + input;
        } else if (!temp.equals("")) {
            out = temp;
        } else if (!input.equals("")) {
            out = input;
        }
        String arr[] = out.split(",");
        int k = 0;

        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (k < arr.length) {
                    array[i][j] = arr[k];
                    k++;
                }
            }
        }
        return array;
    }
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adminButton;
    private javax.swing.JButton adminButton1;
    private javax.swing.JButton adminButton2;
    private javax.swing.JButton adminButton3;
    private javax.swing.JRadioButton consumableRadio;
    private javax.swing.JComboBox<String> itemComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton nonConsumableRadio;
    private javax.swing.JPanel outPanel;
    private javax.swing.JTable outTable;
    private javax.swing.JTable receiptTable;
    private javax.swing.JPanel selectedPanel;
    private javax.swing.JTable selectedTable;
    // End of variables declaration//GEN-END:variables
}
